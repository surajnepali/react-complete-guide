{"ast":null,"code":"var _jsxFileName = \"/home/suraj/Suru/Learning/React/react-complete-guide/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      persons: [{\n        name: 'Suraj',\n        age: 24\n      }, {\n        name: 'Susmita',\n        age: 23\n      }, {\n        name: 'Susan',\n        age: 18\n      }],\n      otherState: 'sone other value',\n      showPersons: false\n    };\n\n    this.switchEventHandler = newName => {\n      // console.log('Was Clicked!!');\n      //DON'T DO THIS: this.state.person[0].name = 'Asmita';\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 22\n        }, {\n          name: 'Susmita',\n          age: 23\n        }, {\n          name: 'Susan',\n          age: 19\n        }]\n      });\n    };\n\n    this.nameChangedHandler = event => {\n      this.setState({\n        persons: [{\n          name: 'Suraj',\n          age: 24\n        }, {\n          name: event.target.value,\n          age: 23\n        }, {\n          name: 'Susan',\n          age: 18\n        }]\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      //since it is javascript, the values should be written in ''.\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    return (\n      /*#__PURE__*/\n      //JSX\n      _jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hi, I'm React App.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is really working!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: style,\n          onClick: this.togglePersonsHandler,\n          children: \"Toggle Persons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), this.state.showPersons === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Person, {\n            name: this.state.persons[0].name,\n            age: this.state.persons[0].age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Person, {\n            name: this.state.persons[1].name,\n            age: this.state.persons[1].age,\n            click: this.switchEventHandler.bind(this, 'Kanchhu'),\n            changed: this.nameChangedHandler,\n            children: \"My Hobbies: Dance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Person, {\n            name: this.state.persons[2].name,\n            age: this.state.persons[2].age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    ); //Children means 'all' that are nested in between this <div></div>\n    //creating elements with 4 arguments. \n    //Here, className: 'App' jun chha ni yo chai div in-line class='' wala concept ho haii\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Hi, I\\'m React App'));\n  }\n\n} // const app = (props) => {\n//   const [personsState, setPersonsState] = useState({\n//     persons: [\n//       {name: 'Suraj', age: 24 },\n//       {name: 'Susmita', age: 23 },\n//       {name: 'Susan', age: 18 }\n//     ]\n//   }); \n//   const [otherState, setOtherState] = useState ('some other values'); \n//   console.log(personsState,otherState);\n//   const switchEventHandler = () => {\n//     //whenever we switch 'personsState' to 'setPersonsSate' it replaces all the values. So,\n//     //we have to make sure that all our old data are included with our new values. \n//     setPersonsState ({\n//       persons: [\n//         {name: 'Asmita', age: 22 },\n//         {name: 'Susmita', age: 23 },\n//         {name: 'Susan', age: 19 }\n//       ]\n//     });\n//   };\n//   return (\n//     //JSX\n//     <div className=\"App\">\n//       <h1>Hi, I'm React App.</h1>\n//       <p>This is really working!!!</p>\n//       <button onClick={switchEventHandler}>Switch Name</button> \n//       <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />\n//       <Person name={personsState.persons[1].name} age={personsState.persons[1].age}>My Hobbies: Dance</Person>\n//       <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n//     </div>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"names":["React","Component","Person","App","state","persons","name","age","otherState","showPersons","switchEventHandler","newName","setState","nameChangedHandler","event","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","bind"],"sources":["/home/suraj/Suru/Learning/React/react-complete-guide/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      {name: 'Suraj', age: 24 },\n      {name: 'Susmita', age: 23 },\n      {name: 'Susan', age: 18 }\n    ],\n    otherState: 'sone other value',\n    showPersons: false\n  }\n\n  switchEventHandler = (newName) => {\n    // console.log('Was Clicked!!');\n    //DON'T DO THIS: this.state.person[0].name = 'Asmita';\n    this.setState ( {\n      persons: [\n        {name: newName, age: 22 },\n        {name: 'Susmita', age: 23 },\n        {name: 'Susan', age: 19 }\n      ]\n    }) \n  }\n\n  nameChangedHandler = (event) => {\n    this.setState( {\n      persons: [\n        { name: 'Suraj', age: 24 },\n        { name: event.target.value, age: 23 },\n        { name: 'Susan', age: 18 }\n      ]\n    } )\n  }\n\n  togglePersonsHandler =() => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n\n  render() {\n\n    const style={ //since it is javascript, the values should be written in ''.\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    return (\n      //JSX\n      <div className=\"App\">\n        <h1>Hi, I'm React App.</h1>\n        <p>This is really working!!!</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}>Toggle Persons</button> \n          {/* conditions cannot be applied here. */}\n        {this.state.showPersons ===true ?   \n          <div>\n            <Person \n              name={this.state.persons[0].name} \n              age={this.state.persons[0].age} />\n            <Person \n              name={this.state.persons[1].name} \n              age={this.state.persons[1].age}\n              click={this.switchEventHandler.bind(this, 'Kanchhu')}\n              changed={this.nameChangedHandler} >My Hobbies: Dance</Person>\n            <Person \n              name={this.state.persons[2].name} \n              age={this.state.persons[2].age} />\n          </div> : null\n        }\n      </div>\n    );\n\n    \n    //Children means 'all' that are nested in between this <div></div>\n    //creating elements with 4 arguments. \n    //Here, className: 'App' jun chha ni yo chai div in-line class='' wala concept ho haii\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Hi, I\\'m React App'));\n  }\n}\n\n// const app = (props) => {\n//   const [personsState, setPersonsState] = useState({\n//     persons: [\n//       {name: 'Suraj', age: 24 },\n//       {name: 'Susmita', age: 23 },\n//       {name: 'Susan', age: 18 }\n//     ]\n//   }); \n\n//   const [otherState, setOtherState] = useState ('some other values'); \n\n//   console.log(personsState,otherState);\n\n//   const switchEventHandler = () => {\n//     //whenever we switch 'personsState' to 'setPersonsSate' it replaces all the values. So,\n//     //we have to make sure that all our old data are included with our new values. \n//     setPersonsState ({\n//       persons: [\n//         {name: 'Asmita', age: 22 },\n//         {name: 'Susmita', age: 23 },\n//         {name: 'Susan', age: 19 }\n//       ]\n//     });\n//   };\n\n     \n//   return (\n//     //JSX\n//     <div className=\"App\">\n//       <h1>Hi, I'm React App.</h1>\n//       <p>This is really working!!!</p>\n//       <button onClick={switchEventHandler}>Switch Name</button> \n//       <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />\n//       <Person name={personsState.persons[1].name} age={personsState.persons[1].age}>My Hobbies: Dance</Person>\n//       <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n//     </div>\n//   );\n  \n// }\n\nexport default App; "],"mappings":"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"},"metadata":{},"sourceType":"module"}