{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n *\n * \n */\n\n\nimport createStaticPrefixer from 'inline-style-prefixer/static/createPrefixer';\nimport createDynamicPrefixer from 'inline-style-prefixer/dynamic/createPrefixer';\nimport ExecutionEnvironment from 'exenv';\nimport staticData from './prefix-data/static';\nimport dynamicData from './prefix-data/dynamic';\nimport { camelCaseToDashCase } from './camel-case-props-to-dash-case';\nvar prefixAll = createStaticPrefixer(staticData);\nvar InlineStylePrefixer = createDynamicPrefixer(dynamicData, prefixAll);\n\nfunction transformValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var value = style[key];\n\n    if (Array.isArray(value)) {\n      value = value.join(';' + key + ':');\n    } else if (value && _typeof(value) === 'object' && typeof value.toString === 'function') {\n      value = value.toString();\n    }\n\n    newStyle[key] = value;\n    return newStyle;\n  }, {});\n} // Flatten prefixed values that are arrays to strings.\n//\n// We get prefixed styles back in the form of:\n// - `display: \"flex\"` OR\n// - `display: \"-webkit-flex\"` OR\n// - `display: [/* ... */, \"-webkit-flex\", \"flex\"]\n//\n// The last form is problematic for eventual use in the browser and server\n// render. More confusingly, we have to do **different** things on the\n// browser and server (noted inline below).\n//\n// https://github.com/FormidableLabs/radium/issues/958\n\n\nfunction flattenStyleValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var val = style[key];\n\n    if (Array.isArray(val)) {\n      if (ExecutionEnvironment.canUseDOM) {\n        // For the **browser**, when faced with multiple values, we just take\n        // the **last** one, which is the original passed in value before\n        // prefixing. This _should_ work, because `inline-style-prefixer`\n        // we're just passing through what would happen without ISP.\n        val = val[val.length - 1].toString();\n      } else {\n        // For the **server**, we just concatenate things together and convert\n        // the style object values into a hacked-up string of like `display:\n        // \"-webkit-flex;display:flex\"` that will SSR render correctly to like\n        // `\"display:-webkit-flex;display:flex\"` but would otherwise be\n        // totally invalid values.\n        // We convert keys to dash-case only for the serialize values and\n        // leave the real key camel-cased so it's as expected to React and\n        // other parts of the processing chain.\n        val = val.join(\";\".concat(camelCaseToDashCase(key), \":\"));\n      }\n    }\n\n    newStyle[key] = val;\n    return newStyle;\n  }, {});\n}\n\nvar _hasWarnedAboutUserAgent = false;\n\nvar _lastUserAgent;\n\nvar _cachedPrefixer;\n\nfunction getPrefixer(userAgent) {\n  var actualUserAgent = userAgent || global && global.navigator && global.navigator.userAgent;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!actualUserAgent && !_hasWarnedAboutUserAgent) {\n      /* eslint-disable no-console */\n      console.warn('Radium: userAgent should be supplied for server-side rendering. See ' + 'https://github.com/FormidableLabs/radium/tree/master/docs/api#radium ' + 'for more information.');\n      /* eslint-enable no-console */\n\n      _hasWarnedAboutUserAgent = true;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'test' || !_cachedPrefixer || actualUserAgent !== _lastUserAgent) {\n    if (actualUserAgent === 'all') {\n      _cachedPrefixer = {\n        prefix: prefixAll,\n        prefixedKeyframes: 'keyframes'\n      };\n    } else {\n      _cachedPrefixer = new InlineStylePrefixer({\n        userAgent: actualUserAgent\n      });\n    }\n\n    _lastUserAgent = actualUserAgent;\n  }\n\n  return _cachedPrefixer;\n}\n\nexport function getPrefixedKeyframes(userAgent) {\n  return getPrefixer(userAgent).prefixedKeyframes || 'keyframes';\n} // Returns a new style object with vendor prefixes added to property names and\n// values.\n\nexport function getPrefixedStyle(style, userAgent) {\n  var styleWithFallbacks = transformValues(style);\n  var prefixer = getPrefixer(userAgent);\n  var prefixedStyle = prefixer.prefix(styleWithFallbacks);\n  var flattenedStyle = flattenStyleValues(prefixedStyle);\n  return flattenedStyle;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","createStaticPrefixer","createDynamicPrefixer","ExecutionEnvironment","staticData","dynamicData","camelCaseToDashCase","prefixAll","InlineStylePrefixer","transformValues","style","Object","keys","reduce","newStyle","key","value","Array","isArray","join","toString","flattenStyleValues","val","canUseDOM","length","concat","_hasWarnedAboutUserAgent","_lastUserAgent","_cachedPrefixer","getPrefixer","userAgent","actualUserAgent","global","navigator","process","env","NODE_ENV","console","warn","prefix","prefixedKeyframes","getPrefixedKeyframes","getPrefixedStyle","styleWithFallbacks","prefixer","prefixedStyle","flattenedStyle"],"sources":["/home/suraj/Suru/Learning/React/react-complete-guide/node_modules/radium/es/prefixer.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n *\n * \n */\nimport createStaticPrefixer from 'inline-style-prefixer/static/createPrefixer';\nimport createDynamicPrefixer from 'inline-style-prefixer/dynamic/createPrefixer';\nimport ExecutionEnvironment from 'exenv';\nimport staticData from './prefix-data/static';\nimport dynamicData from './prefix-data/dynamic';\nimport { camelCaseToDashCase } from './camel-case-props-to-dash-case';\nvar prefixAll = createStaticPrefixer(staticData);\nvar InlineStylePrefixer = createDynamicPrefixer(dynamicData, prefixAll);\n\nfunction transformValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var value = style[key];\n\n    if (Array.isArray(value)) {\n      value = value.join(';' + key + ':');\n    } else if (value && _typeof(value) === 'object' && typeof value.toString === 'function') {\n      value = value.toString();\n    }\n\n    newStyle[key] = value;\n    return newStyle;\n  }, {});\n} // Flatten prefixed values that are arrays to strings.\n//\n// We get prefixed styles back in the form of:\n// - `display: \"flex\"` OR\n// - `display: \"-webkit-flex\"` OR\n// - `display: [/* ... */, \"-webkit-flex\", \"flex\"]\n//\n// The last form is problematic for eventual use in the browser and server\n// render. More confusingly, we have to do **different** things on the\n// browser and server (noted inline below).\n//\n// https://github.com/FormidableLabs/radium/issues/958\n\n\nfunction flattenStyleValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var val = style[key];\n\n    if (Array.isArray(val)) {\n      if (ExecutionEnvironment.canUseDOM) {\n        // For the **browser**, when faced with multiple values, we just take\n        // the **last** one, which is the original passed in value before\n        // prefixing. This _should_ work, because `inline-style-prefixer`\n        // we're just passing through what would happen without ISP.\n        val = val[val.length - 1].toString();\n      } else {\n        // For the **server**, we just concatenate things together and convert\n        // the style object values into a hacked-up string of like `display:\n        // \"-webkit-flex;display:flex\"` that will SSR render correctly to like\n        // `\"display:-webkit-flex;display:flex\"` but would otherwise be\n        // totally invalid values.\n        // We convert keys to dash-case only for the serialize values and\n        // leave the real key camel-cased so it's as expected to React and\n        // other parts of the processing chain.\n        val = val.join(\";\".concat(camelCaseToDashCase(key), \":\"));\n      }\n    }\n\n    newStyle[key] = val;\n    return newStyle;\n  }, {});\n}\n\nvar _hasWarnedAboutUserAgent = false;\n\nvar _lastUserAgent;\n\nvar _cachedPrefixer;\n\nfunction getPrefixer(userAgent) {\n  var actualUserAgent = userAgent || global && global.navigator && global.navigator.userAgent;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!actualUserAgent && !_hasWarnedAboutUserAgent) {\n      /* eslint-disable no-console */\n      console.warn('Radium: userAgent should be supplied for server-side rendering. See ' + 'https://github.com/FormidableLabs/radium/tree/master/docs/api#radium ' + 'for more information.');\n      /* eslint-enable no-console */\n\n      _hasWarnedAboutUserAgent = true;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'test' || !_cachedPrefixer || actualUserAgent !== _lastUserAgent) {\n    if (actualUserAgent === 'all') {\n      _cachedPrefixer = {\n        prefix: prefixAll,\n        prefixedKeyframes: 'keyframes'\n      };\n    } else {\n      _cachedPrefixer = new InlineStylePrefixer({\n        userAgent: actualUserAgent\n      });\n    }\n\n    _lastUserAgent = actualUserAgent;\n  }\n\n  return _cachedPrefixer;\n}\n\nexport function getPrefixedKeyframes(userAgent) {\n  return getPrefixer(userAgent).prefixedKeyframes || 'keyframes';\n} // Returns a new style object with vendor prefixes added to property names and\n// values.\n\nexport function getPrefixedStyle(style, userAgent) {\n  var styleWithFallbacks = transformValues(style);\n  var prefixer = getPrefixer(userAgent);\n  var prefixedStyle = prefixer.prefix(styleWithFallbacks);\n  var flattenedStyle = flattenStyleValues(prefixedStyle);\n  return flattenedStyle;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}