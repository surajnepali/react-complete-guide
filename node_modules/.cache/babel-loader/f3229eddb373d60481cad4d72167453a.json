{"ast":null,"code":"var _jsxFileName = \"/home/suraj/Suru/Learning/React/react-complete-guide/src/Person/Person.js\";\nimport React from 'react';\nimport Radium from 'radium';\nimport './Person.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst person = props => {\n  //arrow function\n  // const style ={\n  //     '@media (min-width: 500px)': {\n  //         width: '450px'\n  //     }\n  // }\n  //dynamic content\n  //return <p>I'm a person and I'm {Math.floor(Math.random() * 30)} years old.</p>\n  return (\n    /*#__PURE__*/\n    // <div className=\"Person\" style={style}>\n    _jsxDEV(\"div\", {\n      className: \"Person\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: props.click,\n        children: [\"I'm \", props.name, \" and I'm \", props.age, \" years old!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: props.changed,\n        value: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  ); // return <p>I'm a person and I'm Math.floor(Math.random() * 30) years old.</p>\n  // If you write above line of code, it will compiled or interpreted as text.\n};\n\nexport default person;","map":{"version":3,"names":["React","Radium","person","props","click","name","age","children","changed"],"sources":["/home/suraj/Suru/Learning/React/react-complete-guide/src/Person/Person.js"],"sourcesContent":["import React from 'react';\nimport Radium from 'radium';\nimport './Person.css';\n\nconst person = (props) => { //arrow function\n\n    // const style ={\n    //     '@media (min-width: 500px)': {\n    //         width: '450px'\n    //     }\n    // }\n\n    //dynamic content\n    //return <p>I'm a person and I'm {Math.floor(Math.random() * 30)} years old.</p>\n    return (\n        // <div className=\"Person\" style={style}>\n        <div className=\"Person\">\n            <p onClick={props.click}>I'm {props.name} and I'm {props.age} years old!</p>\n            <p>{props.children}</p>   \n            <input type=\"text\" onChange={props.changed} value={props.name}></input>    \n        </div>\n        \n    );\n\n   // return <p>I'm a person and I'm Math.floor(Math.random() * 30) years old.</p>\n   // If you write above line of code, it will compiled or interpreted as text.\n\n   \n};\n\nexport default person;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAE;EAExB;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;IAAA;IACI;IACA;MAAK,SAAS,EAAC,QAAf;MAAA,wBACI;QAAG,OAAO,EAAEA,KAAK,CAACC,KAAlB;QAAA,mBAA8BD,KAAK,CAACE,IAApC,eAAmDF,KAAK,CAACG,GAAzD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIH,KAAK,CAACI;MAAV;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAEJ,KAAK,CAACK,OAAnC;QAA4C,KAAK,EAAEL,KAAK,CAACE;MAAzD;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ,EAVsB,CAoBvB;EACA;AAGF,CAxBD;;AA0BA,eAAeH,MAAf"},"metadata":{},"sourceType":"module"}