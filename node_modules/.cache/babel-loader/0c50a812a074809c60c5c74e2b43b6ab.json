{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexport function isNestedStyle(value) {\n  // Don't merge objects overriding toString, since they should be converted\n  // to string values.\n  return value && value.constructor === Object && value.toString === Object.prototype.toString;\n} // Merge style objects. Deep merge plain object values.\n\nexport function mergeStyles(styles) {\n  var result = {};\n  styles.forEach(function (style) {\n    if (!style || _typeof(style) !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(style)) {\n      style = mergeStyles(style);\n    }\n\n    Object.keys(style).forEach(function (key) {\n      // Simple case, nothing nested\n      if (!isNestedStyle(style[key]) || !isNestedStyle(result[key])) {\n        result[key] = style[key];\n        return;\n      } // If nested media, don't merge the nested styles, append a space to the\n      // end (benign when converted to CSS). This way we don't end up merging\n      // media queries that appear later in the chain with those that appear\n      // earlier.\n\n\n      if (key.indexOf('@media') === 0) {\n        var newKey = key; // eslint-disable-next-line no-constant-condition\n\n        while (true) {\n          newKey += ' ';\n\n          if (!result[newKey]) {\n            result[newKey] = style[key];\n            return;\n          }\n        }\n      } // Merge all other nested styles recursively\n\n\n      result[key] = mergeStyles([result[key], style[key]]);\n    });\n  });\n  return result;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isNestedStyle","value","Object","toString","mergeStyles","styles","result","forEach","style","Array","isArray","keys","key","indexOf","newKey"],"sources":["/home/suraj/Suru/Learning/React/react-complete-guide/node_modules/radium/es/merge-styles.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function isNestedStyle(value) {\n  // Don't merge objects overriding toString, since they should be converted\n  // to string values.\n  return value && value.constructor === Object && value.toString === Object.prototype.toString;\n} // Merge style objects. Deep merge plain object values.\n\nexport function mergeStyles(styles) {\n  var result = {};\n  styles.forEach(function (style) {\n    if (!style || _typeof(style) !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(style)) {\n      style = mergeStyles(style);\n    }\n\n    Object.keys(style).forEach(function (key) {\n      // Simple case, nothing nested\n      if (!isNestedStyle(style[key]) || !isNestedStyle(result[key])) {\n        result[key] = style[key];\n        return;\n      } // If nested media, don't merge the nested styles, append a space to the\n      // end (benign when converted to CSS). This way we don't end up merging\n      // media queries that appear later in the chain with those that appear\n      // earlier.\n\n\n      if (key.indexOf('@media') === 0) {\n        var newKey = key; // eslint-disable-next-line no-constant-condition\n\n        while (true) {\n          newKey += ' ';\n\n          if (!result[newKey]) {\n            result[newKey] = style[key];\n            return;\n          }\n        }\n      } // Merge all other nested styles recursively\n\n\n      result[key] = mergeStyles([result[key], style[key]]);\n    });\n  });\n  return result;\n}"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAAE,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;IAAEH,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;MAAE,OAAO,OAAOA,GAAd;IAAoB,CAAtD;EAAyD,CAApI,MAA0I;IAAED,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;MAAE,OAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;IAA+H,CAAjK;EAAoK;;EAAC,OAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE/V,OAAO,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;EACnC;EACA;EACA,OAAOA,KAAK,IAAIA,KAAK,CAACH,WAAN,KAAsBI,MAA/B,IAAyCD,KAAK,CAACE,QAAN,KAAmBD,MAAM,CAACH,SAAP,CAAiBI,QAApF;AACD,C,CAAC;;AAEF,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAClC,IAAIC,MAAM,GAAG,EAAb;EACAD,MAAM,CAACE,OAAP,CAAe,UAAUC,KAAV,EAAiB;IAC9B,IAAI,CAACA,KAAD,IAAUd,OAAO,CAACc,KAAD,CAAP,KAAmB,QAAjC,EAA2C;MACzC;IACD;;IAED,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;MACxBA,KAAK,GAAGJ,WAAW,CAACI,KAAD,CAAnB;IACD;;IAEDN,MAAM,CAACS,IAAP,CAAYH,KAAZ,EAAmBD,OAAnB,CAA2B,UAAUK,GAAV,EAAe;MACxC;MACA,IAAI,CAACZ,aAAa,CAACQ,KAAK,CAACI,GAAD,CAAN,CAAd,IAA8B,CAACZ,aAAa,CAACM,MAAM,CAACM,GAAD,CAAP,CAAhD,EAA+D;QAC7DN,MAAM,CAACM,GAAD,CAAN,GAAcJ,KAAK,CAACI,GAAD,CAAnB;QACA;MACD,CALuC,CAKtC;MACF;MACA;MACA;;;MAGA,IAAIA,GAAG,CAACC,OAAJ,CAAY,QAAZ,MAA0B,CAA9B,EAAiC;QAC/B,IAAIC,MAAM,GAAGF,GAAb,CAD+B,CACb;;QAElB,OAAO,IAAP,EAAa;UACXE,MAAM,IAAI,GAAV;;UAEA,IAAI,CAACR,MAAM,CAACQ,MAAD,CAAX,EAAqB;YACnBR,MAAM,CAACQ,MAAD,CAAN,GAAiBN,KAAK,CAACI,GAAD,CAAtB;YACA;UACD;QACF;MACF,CAtBuC,CAsBtC;;;MAGFN,MAAM,CAACM,GAAD,CAAN,GAAcR,WAAW,CAAC,CAACE,MAAM,CAACM,GAAD,CAAP,EAAcJ,KAAK,CAACI,GAAD,CAAnB,CAAD,CAAzB;IACD,CA1BD;EA2BD,CApCD;EAqCA,OAAON,MAAP;AACD"},"metadata":{},"sourceType":"module"}